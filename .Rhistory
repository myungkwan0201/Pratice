library(devtools)
devtools::use_mit_license()
y_sample<-function(x){
y=x^2
return(y)
}
my_sample<-function(x){
y=x^2
return(y)
}
my_sample(2)
View(my_sample)
install.packages("roxygen2")
library(roxygen2)
devtools::document()
devtools::document()
devtools::document()
?my_sample()
?my_sample()
library(devtools)
library(roxygen2)
?my_sample()
library(Pratice)
library(Pratice)
?my_sample()
source('C:/Users/Jehyun Cheon/Desktop/test/Pratice/R/sample.R', encoding = 'UTF-8')
devtools::document()
library(Pratice)
?my_sample2()
?my_sample()
Power2(10,3)
Power2(8,17)
Power2(131,3)
Power2<-function(x,a){
x^a
}
Power2(10,3)
Power2(8,17)
Power2(131,3)
PlotPower<-function(x,y){
plot(x,Power3(x,y))
}
PlotPower(1:10,6)
Power3<-function(x,a){
result <-x^a
return (result)
}
PlotPower<-function(x,y){
plot(x,Power3(x,y))
}
PlotPower(1:10,6)
dglm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly ,family=binomial)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly ,family=binomial)
library(ISLR)
names(Weekly)
dim(Weekly)
summary(Weekly)
cor(Weekly[,-9])
pairs(Weekly)
attach(Weekly)
plot(Volume)
plot(Today)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly ,family=binomial)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly ,family=binomial)
summary(glm.fit)
contrasts(Direction)
glm.pred=rep("Down",length(glm.probs))
glm.pred[glm.probs>.5]="Up"
summary(glm.fit)$coef
summary(glm.fit)$coef[,4]
glm.probs=predict(glm.fit,type="response")
glm.probs[1:10]
contrasts(Direction)
glm.pred=rep("Down",length(glm.probs))
glm.pred[glm.probs>.5]="Up"
table(glm.pred,Direction)
table(glm.pred,Direction)
table(pred.lda$class, Direction.20092010)
library(MASS)
fit.lda <-lda(Direction~Lag2, data= Weekly, subset=train)
fit.lda
pred.lda<-predict(fit.lda,Weekly.20092010)
table(pred.lda$class, Direction.20092010)
library(MASS)
fit.lda <-lda(Direction~Lag2, data= Weekly, subset=train)
fit.lda
train<-(Year<2009)
Weekly.20092010<-Weekly[!train,]
Direction.20092010<-Direction[!train]
fit.glm2<-glm(Direction ~ Lag2, data=Weekly, family= binomial, subset = train)
summary(fit.glm2)
probs2<-predict(fit.glm2, Weekly.20092010, type="response")
pred.glm2 <- rep("Down",length(probs2))
pred.glm2[probs2>0.5] <-"Up"
table(pred.glm2,Direction.20092010)
library(MASS)
fit.lda <-lda(Direction~Lag2, data= Weekly, subset=train)
fit.lda
pred.lda<-predict(fit.lda,Weekly.20092010)
table(pred.lda$class, Direction.20092010)
attach(Auto)
mpg01<-rep(0,length(mpg))
mpg01[mpg>median(mpg)] <-1
Auto<-data.frame(Auto,mpg01)
cor(Auto[,-9])
pairs(Auto)
cor(Auto[,-9])
cor(Auto[,-9])
fit.lda <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
fit.lda
pred.lda <- predict(fit.lda, Auto.test)
train <- (year %% 2 == 0)
Auto.train <-Auto[train, ]
Auto.test <-Auto[!train, ]
mpgo1.test <- mpg01[!train]
fit.lda <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
fit.lda
pred.lda <- predict(fit.lda, Auto.test)
pred.lda
table(pred.lda$class, mpg01.test)
mpg01.test <- mpg01[!train]
fit.lda <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
fit.lda
pred.lda <- predict(fit.lda, Auto.test)
table(pred.lda$class, mpg01.test)
pairs(Weekly)
pairs(Weekly)
cor(Weekly[,-9])
plot(Volume)
glm.fit=glm(Direction~Lag1+Lag2+Lag3+Lag4+Lag5+Volume, data=Weekly ,family=binomial)
summary(glm.fit)
summary(glm.fit)
summary(glm.fit)
table(glm.pred,Direction)
table(pred.glm2,Direction.20092010)
pairs(Auto)
cor(Auto[,-9])
train <- (year %% 2 == 0)
Auto.train <-Auto[train, ]
Auto.test <-Auto[!train, ]
mpg01.test <- mpg01[!train]
fit.lda <- lda(mpg01 ~ cylinders + weight + displacement + horsepower, data = Auto, subset = train)
fit.lda
table(pred.lda$class, mpg01.test)
Power<-function(){
2^3
}
Power()
Power2(3,8)
Power2(10,3)
Power2(8,17)
Power2(131,3)
x <- 1:10
plot(x,Power3(x,2) ,log="xy",xlab="log x", ylab="log y")
PlotPower<-function(x,y){
plot(x,Power3(x,y))
}
PlotPower(1:10,6)
library(Pratice)
?my_sample()
devtools::use_vignette(Pratice)
devtools::use_vignette("Pratice")
install,packages("tufte")
install.packages("tufte")
library(tufte)
unlink('vignettes/Pratice_cache', recursive = TRUE)
knit_with_parameters('C:/Users/Jehyun Cheon/Desktop/test/Pratice/vignettes/Pratice.Rmd', encoding = 'UTF-8')
library(rmarkdown)
?rmarkdown::html_vignette
?rmarkdown::pdf_vignette
?pdf_doucment
?pdf_doucment:
library(Pratice)
?my_sample()
?my_sample()
library(Pratice)
?my_sample()
library(Pratice)
